@inject TodoVM TodoVM

<InputRadioGroup TValue="FilterBy" Value="TodoVM.FilterBy" ValueExpression="() => TodoVM.FilterBy" ValueChanged="value => TodoVM.UpdateFilterAsync(value)">
    <div class="btn-group" role="group">
        <InputRadio Value="FilterBy.All" id="all" class="btn-check" />
        <label class="btn @(TodoVM.FilterBy == FilterBy.All ? " btn-outline-primary" : "btn-outline-secondary")" for="all">
            <i class="bi bi-sunglasses @(TodoVM.FilterBy != FilterBy.All ? "text-primary" : "")"></i> @(TodoVM.FilterBy == FilterBy.All ? "All" : "")
        </label>

        <InputRadio Value="FilterBy.Completed" id="completed" class="btn-check" />
        <label class="btn @(TodoVM.FilterBy == FilterBy.Completed ? "btn-outline-success" : "btn-outline-secondary")" for="completed">
            <i class="bi bi-check-circle-fill @(TodoVM.FilterBy != FilterBy.Completed ? "text-success" : "")"></i> @(TodoVM.FilterBy == FilterBy.Completed ? "Completed" : "")
        </label>

        <InputRadio Value="FilterBy.Important" id="important" class="btn-check" />
        <label class="btn @(TodoVM.FilterBy == FilterBy.Important ? " btn-outline-warning" : "btn-outline-secondary")" for="important">
            <i class="bi bi-star-fill @(TodoVM.FilterBy != FilterBy.Important ? "text-warning" : "")"></i> @(TodoVM.FilterBy == FilterBy.Important ? "Important" : "")
        </label>
    </div>
</InputRadioGroup>
