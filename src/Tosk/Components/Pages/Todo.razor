@page "/"
@inject ITodoService TodoTaskService

<div class="d-flex flex-column justify-content-between p-3" style="height:100vh">
    <div class="mb-3 row">
        <div class="col-auto row">
            <div class="col-auto"><span class="fs-3 fw-bold">>_ Tosk</span></div>
            <div class="col-auto"><ToggleThemeButton/></div>
        </div>
    </div>
    <div class="overflow-auto remove-scrollbar" tabindex="-1" style="outline: none">
        <ol class="list-group  list-group-flush">
            @foreach (var task in TodoTaskService.GetAll())
            {
                <li class="list-group-item rounded @(task.IsImportant ? "list-group-item-warning" : "") d-flex justify-content-between align-items-center">
                    <div class="ms-2">
                        <div class="fw-bold overflow-auto @(task.IsCompleted ? "text-decoration-line-through" : "")">
                            @task.Title
                        </div>
                    </div>
                    <div class="row ms-2 align-items-center justify-content-end flex-wrap-reverse">
                        <div class="col-auto">
                            @if (task.IsCompleted)
                            {
                                <span class="badge text-bg-success rounded-pill">@task.CompletedAt</span>
                            }
                        </div>
                        <div class="col-auto text-nowrap">
                            <button class="btn" @onclick="() => task.ToggleCompletion()">
                                <i class="bi @(task.IsCompleted ? "bi-check-circle-fill text-success" : "bi-check-circle")" />
                            </button>
                            <button class="btn" @onclick="() => task.ToggleImportance()">
                                <i class="bi @(task.IsImportant ? "bi-star-fill text-warning" : "bi-star")" />
                            </button>
                        </div>                        
                    </div>
                </li>
            }
        </ol>
    </div>
    <div class="mt-3">
        <form class="row" @onsubmit="() => TodoTaskService.Add(TodoTitle)">
            <div class="col">
                <InputText @bind-Value="TodoTitle" class="form-control" placeholder="Add a task!" required autofocus />
            </div>
            <div class="col-auto">
                <button type="submit" class="btn btn-success">
                    <i class="bi bi-plus-lg"></i>
                </button>
            </div>
        </form>
    </div>
</div>

@code {
    string TodoTitle { get; set; } = string.Empty;
}
